/**
* @Author:zhoutao
* @Date:2022/3/1 09:15
* @Desc:
 */

package _9bag

//0-1背包：给你一个可装载重量为W的背包和N个物品，每个物品有重量和价值两个属性。其中第i个物品的重量为wt[i],价值为val[i],现在用这个背包装物品，最多能装的价值是多少？
//状态：背包的容量和可选择的物品
//选择：装和不装
// dp[i][w]：对于前i个物品，当前背包的容量为w,这种情况下可以装的最大价值(这是背包问题的典型套路)
// 没有物品或者没有空间的时候，能装的价值为0，即dp[0][...] dp[...][0]

//子背包
//416题：给定一个只包含正整数的非空数组。是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。
// 解读：给一个可以装在sum/2的背包和n个物品，每个物品的重量为nums[i],现在让你装物品，是否存在一种装法，恰好装满容量为sum/2的背包

//进行状态压缩
///进行状态压缩
//dp[i][j] 都是通过上一行 dp[i-1][..] 转移过来的

//完全背包
//518题：零钱兑换2
//给定不同面额的硬币和一个总金额。写出函数来计算可以凑成总金额的硬币组合数。假设每一种面额的硬币有无限个。
